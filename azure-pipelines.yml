trigger:
  - main

pool:
  name: gpu-t4-pool

variables:
  imageName: 'nebulydocker/nebullvm'

steps:

  - script: |
      nvidia-smi
    displayName: 'Ensure cuda is installed correctly'

#  - script: |
#      export DEBIAN_FRONTEND=noninteractive
#      sudo apt-get update -y
#      sudo apt-get install -y ca-certificates curl gnupg lsb-release
#      sudo mkdir -p /etc/apt/keyrings
#      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#      echo \
#        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#      sudo apt-get update -y
#      sudo apt-get install -y docker-ce docker-ce-cli containerd.io
#      sudo chmod 666 /var/run/docker.sock
#    displayName: 'Install docker'

#  - script: |
#      docker run hello-world
#    displayName: 'Ensure docker works correctly'

  - script: |
      pip uninstall -y nebullvm
      pip install .
    displayName: 'Install nebullvm'

  - script: |
      cd apps/accelerate/speedster
      pip uninstall -y speedster
      pip install .
      cd ../../..
    displayName: 'Install speedster'

  - script: python -m pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cu117
    displayName: 'Install PyTorch'

  - script: python -m nebullvm.installers.auto_installer --frameworks torch onnx tensorflow huggingface --compilers all
    displayName: 'Install deep learning compilers'

  - script: python -m pip install -r "requirements-dev.txt"
    displayName: 'Install requirements for testing'

  - script: |
      export SPEEDSTER_DISABLE_TELEMETRY=1
      export PATH=$PATH:/home/AzDevOps/.local/bin
      cd apps/accelerate/speedster
      pytest
      cd ../../..
    displayName: 'Run api tests'

  - script: |
      export PATH=$PATH:/home/AzDevOps/.local/bin
      cd nebullvm
      pytest
      cd ../
    displayName: 'Run components tests'

#  - task: Docker@2
#    displayName: 'Build and push the image to DockerHub'
#    inputs:
#      containerRegistry: 'docker hub'
#      repository: 'nebulydocker/nebullvm'
#      command: 'buildAndPush'
#      Dockerfile: 'Dockerfile'